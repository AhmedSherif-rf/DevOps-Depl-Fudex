version: '3'
services:
  q_user:
    image: ahmedsherifmo/q_user-qa
    #ienv_file: .env
    networks:
      - q_parts
    ports:
      - "8080"
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_user

  q_subscriber:
    image: ahmedsherifmo/q_subscriber-qa
    #env_file: cst/.env
    ports:
      - "8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_subscriber


  q_plan:
    image: ahmedsherifmo/q_plan-qa
    #env_file: cst/.env
    ports:
      - "8083:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_plan


  q_integration:
    image: ahmedsherifmo/q_integration-qa
    #env_file: cst/.env
    ports:
      - "8084:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_integration



  q_invoice:
    image: ahmedsherifmo/q_invoice-qa
    #env_file: cst/.env
    ports:
      - "8085:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_invoice

  q_messaging:
    image: ahmedsherifmo/q_messaging-qa
    #env_file: cst/.env
    ports:
      - "8086:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_messaging
  
  
  q_location:
    image: ahmedsherifmo/q_location-qa
    #env_file: cst/.env
    ports:
      - "8087:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_location

  q_customer:
    image: ahmedsherifmo/q_customer-qa
    #env_file: cst/.env
    ports:
      - "8088:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_customer

  q_product:
    image: ahmedsherifmo/q_product-qa
    #env_file: cst/.env
    ports:
      - "8089:8080"
    networks:
      - q_parts
    depends_on:
      - some-postgres
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_product

  q_qvm_dashboard:
    image: ahmedsherifmo/q_qvm_dashboard-qa
    #env_file: cst/.env
    ports:
      - "8998:8080"
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q_qvm_dashboard

  some-postgres:
    image: postgres
    container_name: some-postgres
    env_file: .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    networks:
      - q_parts
    volumes:
      - ./data:/var/lib/postgresql/data
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/some-postgres

  qvm-admin:
    image: ahmedsherifmo/qvm-admin-qa
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - qvm-order:/var/www/html/qvm-order/
      - qvm-notifications:/var/www/html/qvm-notifications/
      - qvm-wallet:/var/www/html/qvm-wallet/
      - ./nginx-conf:/etc/nginx/sites-enabled
       #- certbot-etc:/etc/letsencrypt
        #  - ./certbot/www:/var/www/certbot/:ro
  #     - ./certbot/:/etc/letsencrypt/live
  #     - ./cert-ssl:/etc/letsencrypt
  #       #      - word:/var/www/html
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/qvm-admin-nginx

  qvm-notifications:
    image: ahmedsherifmo/qvm-notifications-qa
    restart: unless-stopped
    volumes:
      - qvm-notifications:/var/www/html/qvm-notifications/
      - ./nginx-conf:/etc/nginx/sites-enabled
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/qvm-notifications


  qvm-wallet:
    image: ahmedsherifmo/qvm-wallet-qa
    restart: unless-stopped
    volumes:
      - qvm-wallet:/var/www/html/qvm-wallet/
      - ./nginx-conf:/etc/nginx/sites-enabled
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/qvm-wallet

  qvm-order:
    image: ahmedsherifmo/qvm-order-qa
    restart: unless-stopped
    volumes:
      - qvm-order:/var/www/html/qvm-order/
      - ./nginx-conf:/etc/nginx/sites-enabled
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/qvm-order

  erp-stock:
    container_name: erp-stock
    image: ahmedsherifmo/erp-stock-qa
    restart: unless-stopped
    volumes:
      - erp-stock:/var/www/html/erp-stock/
      - ./nginx-conf:/etc/nginx/sites-enabled
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/erp-stock

  q-public-api:
    image: ahmedsherifmo/api-public-qa
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      #- front:/usr/src/app/
      - ./nginx-conf:/etc/nginx/sites-enabled
    networks:
      - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/q-public-api


  ms-router:
    depends_on:
      - q-public-api
      - q_user
      - q_subscriber
      - q_plan
      - q_integration
      - q_invoice
      - q_messaging
      - q_location
      - q_customer
      - q_product
    image: nginx:1.15.12-alpine
    container_name: ms-router
    restart: unless-stopped
    ports:
      - "8888:80"
      - "443"
    volumes:
      - ./nginx-api-route:/etc/nginx/conf.d
    networks:
     - q_parts
    logging:
      driver: awslogs
      options:
        awslogs-region: me-south-1
        awslogs-group: logs/container/ms-router

volumes:
  qvm-order:
  qvm-notifications:
  qvm-wallet:
  erp-stock:      
networks:
  q_parts:
    #  driver: bridge
                                  
